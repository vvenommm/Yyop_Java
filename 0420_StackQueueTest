package kr.or.ddit.basic;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

public class StackQueueTest {

	public static void main(String[] args) {
		/*
		 Stack : 후입선출(LIFO)의 자료구조
		 Queue : 선입선출(FIFO)의 자료구조
		 
		 Stack과 Queue는 LinkedList를 이용하여 사용할 수 있다.
		 */
		
		System.out.println("메소드 호출 전");
		
		String temp = test(); //여기 위치 값을 stack에 저장(=콜 스택)해서 메소드가 끝나면 그 값을 빼와 참고하고 다시 이 위치로 돌아옴
		
		System.out.println("메소드 호출 후 temp : " + temp);

		System.out.println("------------------------------------------------------------------");
		
		/*
		 Stack의 명령
		 1. 자료 입력 : push(입력값)
		 2. 자료 출력 : pop() -> 스택에서 자료를 꺼내온 후 자료를 스택에서 삭제
		 				   peek() ->  삭제없이 자료를 꺼내온다
		 */
		
		Stack<String> stack = new Stack<String>();
		
		stack.push("홍길동");
		stack.push("일지매");
		stack.push("변학도");
		stack.push("강감찬");
		
		System.out.println("현재 stack : " + stack);
		System.out.println("\n@@@@@@@@@@@@@@@\n");

		String data = stack.pop();
		
		System.out.println("꺼내온 값 : " + data); //꺼낸 값은 stack에서 삭제
		System.out.println("현재 stack : " + stack);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		System.out.println("꺼내온 값 : " + stack.pop());
		System.out.println("현재 stack : " + stack);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		stack.push("성춘향");
		System.out.println("추가 후 stack : " + stack);
		System.out.println("\n@@@@@@@@@@@@@@@\n");

		System.out.println("꺼내온 값 : " + stack.pop());
		System.out.println("현재 stack : " + stack);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		System.out.println("삭제 없이 꺼내온 값 : " + stack.peek());
		System.out.println("현재 stack : " + stack);
		
		
		System.out.println("\n------------------------------------------------------------------\n");

		
		/*
		 Queue의 명령
		 1. 자료 입력 : offer(입력값)
		 2. 자료 출력 : poll() -> 자료를 Queue에서 꺼낸 후 그 자료를 Queue에서 삭제
		 				   peek() -> 삭제 없이 자료 꺼내기
		 */
		
		//Queue라는 클래스가 없기 때문에 new Queue로 생성할 수 없음
		Queue<String> queue = new LinkedList<String>();
		
		queue.offer("홍길동");
		queue.offer("일지매");
		queue.offer("변학도");
		queue.offer("강감찬");
		
		System.out.println("현재 queue : " + queue);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		temp = queue.poll();
		System.out.println("꺼내온 값 : " + temp);
		System.out.println("현재 queue : " + queue);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		System.out.println("꺼내온 값 : " + queue.poll());
		System.out.println("현재 queue : " + queue);
		System.out.println("\n@@@@@@@@@@@@@@@\n");
		
		queue.offer("성춘향");
		System.out.println("현재 queue : " + queue);
		
		
		
	}

	private static String test() {
		System.out.println("test");
		return "test return";
	}

}
