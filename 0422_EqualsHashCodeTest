package kr.or.ddit.basic;

import java.util.HashSet;

public class EqualsHashCodeTest {

	public static void main(String[] args) {
		Person p1 = new Person();
		p1.setId(1);
		p1.setName("홍길동");
		
		Person p2 = new Person();
		p2.setId(2);
		p2.setName("일지매");
		
		Person p3 = p1;
		
		//객체 비교는 equals로 비교 그러나 sysout ==으로 해도 false가 나옴
		System.out.println("== -> " + (p1 == p2)); 
		System.out.println("equals -> " + p1.equals(p2));
		
		
		System.out.println("\n=================================\n");
		
		
		p2.setId(1);
		p2.setName("홍길동");
		
		System.out.println("p2에 p1과 같은 값을 넣은 후");
		System.out.println("== -> " + (p1 == p2));  //equals는 object에 있는 메소드
		System.out.println("equals -> " + p1.equals(p2)); //이렇게 해도 false가 나옴 왜?
		
		
		System.out.println("\n=================================\n");
		
		
		System.out.println("p3에 p1 객체 자체를 넣은 후");
		System.out.println("== -> " + (p1 == p3));  //equals는 object에 있는 메소드
		System.out.println("equals -> " + p1.equals(p3)); //이렇게 해도 false가 나옴 왜?
		
		
		System.out.println("\n=================================\n");

		
		HashSet<Person> testSet = new HashSet<Person>();
		
		testSet.add(p1);
		testSet.add(p2);
		
		System.out.println("p1, p2 추가한 testSet의 size = " + testSet.size());

		
		System.out.println("\n=================================\n");
		
		
		testSet.add(p3);
		
		System.out.println("p1, p2, p3 추가한 testSet의 size = " + testSet.size());
		
		
		System.out.println("\n=================================\n");
		
		System.out.println("p1과 p3의 hashCode가 같다.");
		System.out.println("p1 hashCode : " + p1.hashCode());
		System.out.println("p2 hashCode : " + p2.hashCode());
		System.out.println("p3 hashCode : " + p3.hashCode());
		
		
		
	}

}


class Person{
	private int id;
	private String name;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	
	@Override
	public boolean equals(Object obj) {
		if(this == obj) return true;
		if(obj == null) return false;
		
		//같은 유형의 클래스인지 검사
		if(this.getClass() != obj.getClass()) { //참이면 완전히 다른 객체라는 뜻
			return false;
		}
		
		//매개변수의 값을 현재 객체 유형으로 형변환
		Person that = (Person) obj;
		
		if(this.name == null && that.name != null) {
			return false;
		}
		
		if(this.id == that.id && this.name == that.name) { //name이 둘 다 null일 경우를 대비하여 비교
			return true;
		}
		
		if(this.id == that.id && this.name.contentEquals(that.name)) {
			return true;
		}
		
		return false; //위의 조건들 빼고 나머지는 다 false
	}
	
	
}
